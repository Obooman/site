{"version":3,"sources":["webpack:///./src/components/PostLink/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/PostLink/index.module.css"],"names":["PostLink","post","className","styles","link","to","frontmatter","slug","title","subtitle","date","excerpt","pageQuery","IndexPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","map","key","id","container","Helmet","rel","href","withPrefix","content","header","Logo","ThemeSwitch","module","exports"],"mappings":"mPAceA,EAVE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,yBAAKC,UAAWC,IAAOC,MACrB,kBAAC,IAAD,CAAMC,GAAIJ,EAAKK,YAAYC,MAAON,EAAKK,YAAYE,OACnD,uBAAGN,UAAWC,IAAOM,UAArB,gBAA6CR,EAAKK,YAAYI,KAA9D,KACA,2BAAIT,EAAKU,W,YC+BFC,G,oBAFEC,UA5BG,SAAC,GAIZ,IACCC,EADF,EAHJC,KACEC,kBAAqBC,MAIpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKd,YAAYI,QACvCW,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAItB,KAAMkB,EAAKC,UAEvD,OACE,yBAAKlB,UAAS,GAAKC,IAAOqB,WACxB,kBAACC,EAAA,EAAD,KACE,oDACA,0BAAMC,IAAI,OAAOC,KAAMC,YAAW,mBAEpC,yBAAK1B,UAAS,GAAKC,IAAO0B,SACxB,iCACE,4BAAQ3B,UAAWC,IAAO2B,QACxB,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,OAEDlB,MASW,e,qBCvCtBmB,EAAOC,QAAU,CAAC,KAAO,4BAA4B,SAAW","file":"component---src-pages-index-js-479bfd417fd83f362852.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styles from \"./index.module.css\"\n\nconst PostLink = ({ post }) => {\n  return (\n    <div className={styles.link}>\n      <Link to={post.frontmatter.slug}>{post.frontmatter.title}</Link>\n      <p className={styles.subtitle}>Published in {post.frontmatter.date} </p>\n      <p>{post.excerpt}</p>\n    </div>\n  )\n}\n\nexport default PostLink\n","import React from \"react\"\nimport styles from \"./index.module.css\"\nimport Logo from \"../components/Logo\"\nimport ThemeSwitch from \"../components/ThemeSwitch\"\nimport { graphql, withPrefix } from \"gatsby\"\nimport PostLink from \"../components/PostLink\"\nimport { Helmet } from \"react-helmet\"\nimport \"./global.css\"\nimport \"./article.css\"\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date)\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return (\n    <div className={`${styles.container}`}>\n      <Helmet>\n        <title>List - Oboo Cheng</title>\n        <link rel=\"icon\" href={withPrefix(\"/favicon.ico\")} />\n      </Helmet>\n      <div className={`${styles.content}`}>\n        <section>\n          <header className={styles.header}>\n            <Logo />\n            <ThemeSwitch />\n          </header>\n          {Posts}\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          wordCount {\n            words\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"index-module--link--3SX8Z\",\"subtitle\":\"index-module--subtitle--3POIg\"};"],"sourceRoot":""}